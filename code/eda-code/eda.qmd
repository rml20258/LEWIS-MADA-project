---
title: "Exploratory analysis script"
date: "2024-02-07"
output: html_document
---

  

# Setup

```{r}
#load needed packages. make sure they are installed.
library(here) #for data loading/saving
library(dplyr)
library(skimr)
library(ggplot2)
library(gt)
library(gtsummary)
library(procs)
```


Loading the project data.

```{r}
#Path to data. Note the use of the here() package and not absolute paths
data_location <- here::here("data","processed-data","project_data.rds")
#load data
project_data <- readRDS(data_location)
```

# Data exploration through tables

The code below calculates the distribution of each categorical variable and basic statistics for continuous variables. 
```{r}
str(project_data)

#Getting distributions for categorical variables
freq_table <- proc_freq(project_data, tables = c("WHO_REGION","WB_INCOME","HPV_NATIONAL_SCHEDULE","HPV_YEAR_INTRODUCTION","HPV_PRIM_DELIV_STRATEGY","HPV_SEX","doses_rec"), options = "missing", output = out)
freqtable_file = here("results", "tables", "freq_table_results.rds")
saveRDS(freq_table, file = freqtable_file)


project_data %>% dplyr::select(-CODE, -CODE2, -Country, -year_covid) %>% tbl_summary()

#Getting statistics for continuous variables
means_table <- proc_means(project_data, var = c("total_pop","pop_density","median_age","pop_growth_rate","fertility_rate","death_rate","life_expect","migration","Cumulative_case_rate","Cumulative_death_rate","HPV_YEAR_INTRODUCTION","coverage_diff"), stats = c("N","NMISS","MEAN","STD","MEDIAN","Q1","Q3","MIN","MAX"), options = v(maxdec = 2), output = out)
meanstable_file = here("results", "tables", "means_table_results.rds")
saveRDS(means_table, file = meanstable_file)

### Checks to determine if there are any countries with extremely low coverage estimates that seem implausible
proc_means(project_data, var = c("coverage_2019","coverage_2022"), stats = c("N","NMISS","MEAN","STD","MEDIAN","Q1","Q3","MIN","MAX"), options = v(maxdec = 2))

project_data %>% filter(coverage_2019 < 20 | coverage_2022 < 20) %>% dplyr::select(Country, coverage_diff, coverage_2019, coverage_2022)
#Several countries have coverage estimates that seem to be data quality issues (e.g., Botswana, Gambia, Cook Islands), but there's no way to actually know if coverage is actually that low or if coverage estimates are extremely off - I'll leave data as is for now. 

```

Next, I'll look at the continuous variables using histograms;
```{r}
project_data %>%
  ggplot(aes(total_pop)) + geom_histogram()

project_data %>%
  ggplot(aes(pop_density)) + geom_histogram()

project_data %>%
  ggplot(aes(median_age)) + geom_histogram()

project_data %>%
  ggplot(aes(pop_growth_rate)) + geom_histogram()

project_data %>%
  ggplot(aes(fertility_rate)) + geom_histogram()

project_data %>%
  ggplot(aes(death_rate)) + geom_histogram()

project_data %>%
  ggplot(aes(life_expect)) + geom_histogram()

project_data %>%
  ggplot(aes(migration)) + geom_histogram()

project_data %>%
  ggplot(aes(Cumulative_case_rate)) + geom_histogram()

project_data %>%
  ggplot(aes(Cumulative_death_rate)) + geom_histogram()

project_data %>%
  ggplot(aes(HPV_YEAR_INTRODUCTION)) + geom_histogram()

```



Next step is to look at the outcome (difference in coverage between 2022 and 2019).
```{r}
#histogram of differnce in coverage
project_data %>%
  ggplot(aes(coverage_diff)) + geom_histogram()

```
Final exploratory is to look at bivariate associations between each of the predictors and the outcome through figures.
```{r}
#Violin plots of the outcome by each categorical variable
project_data %>%
  ggplot(aes(coverage_diff, WHO_REGION)) + geom_violin()

project_data %>%
  ggplot(aes(coverage_diff, WB_INCOME)) + geom_violin()

project_data %>%
  ggplot(aes(coverage_diff, HPV_NATIONAL_SCHEDULE)) + geom_violin()

project_data %>%
  ggplot(aes(coverage_diff, HPV_PRIM_DELIV_STRATEGY)) + geom_violin()

project_data %>%
  ggplot(aes(coverage_diff, HPV_SEX)) + geom_violin()

project_data %>%
  ggplot(aes(coverage_diff, as.factor(doses_rec))) + geom_violin()



#Scatterplots with the outcome and each continuous variable
project_data %>%
  ggplot(aes(coverage_diff, total_pop)) + geom_point() + geom_smooth()
#Taking a closer look at the data that is bunched up less than <100,000
project_data %>%
  filter(total_pop < 100000) %>%
  ggplot(aes(coverage_diff, total_pop)) + geom_point() + geom_smooth()

project_data %>%
  ggplot(aes(coverage_diff, pop_density)) + geom_point() + geom_smooth()
project_data %>% filter(pop_density<1000) %>%
  ggplot(aes(coverage_diff, pop_density)) + geom_point() + geom_smooth()

project_data %>%
  ggplot(aes(coverage_diff, median_age)) + geom_point() + geom_smooth()

project_data %>%
  ggplot(aes(coverage_diff, fertility_rate)) + geom_point() + geom_smooth()

project_data %>%
  ggplot(aes(coverage_diff, death_rate)) + geom_point() + geom_smooth()

project_data %>%
  ggplot(aes(coverage_diff, life_expect)) + geom_point() + geom_smooth()

project_data %>%
  ggplot(aes(coverage_diff, migration)) + geom_point() + geom_smooth()

project_data %>%
  ggplot(aes(coverage_diff, Cumulative_case_rate)) + geom_point() + geom_smooth()

project_data %>%
  ggplot(aes(coverage_diff, Cumulative_death_rate)) + geom_point() + geom_smooth()

project_data %>%
  ggplot(aes(coverage_diff, HPV_YEAR_INTRODUCTION)) + geom_point() + geom_smooth()

```
There's pretty substantial variability in the outcome. There don't appear to be any strong relationships between the covariates and the outcome, and linear relationships are likely not great fits. For most associations, a second or third order term may be more appropriate for logistic regression modeling.

Based on the visual inspections and apriori knowledge, the following characteristics were considered for multivariable modeling: WHO region, country income level, year of HPV vaccination, primary delivery strategy, gender neutral vacciantion, number of recommended doses, median age, fertility rate, death rate, life expectancy, migration, cumulative case rate, cumulative death rate. 

